"use strict";(self.webpackChunkworkshop_pairprogramming_site=self.webpackChunkworkshop_pairprogramming_site||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Activities","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Grow and Glow Game: Facilitator Instructions","href":"/docs/activities/grow_and_glow_game","docId":"activities/grow_and_glow_game","unlisted":false},{"type":"link","label":"Myth or Fact Game","href":"/docs/activities/myth_or_fact_game","docId":"activities/myth_or_fact_game","unlisted":false},{"type":"link","label":"Pair Draw","href":"/docs/activities/pair_draw","docId":"activities/pair_draw","unlisted":false}],"href":"/docs/category/activities"},{"type":"link","label":"Agenda","href":"/docs/agenda","docId":"agenda","unlisted":false},{"type":"category","label":"Glossary","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Baby Steps","href":"/docs/glossary/baby_steps","docId":"glossary/baby_steps","unlisted":false},{"type":"link","label":"Back of the Room Training","href":"/docs/glossary/back_of_room_training","docId":"glossary/back_of_room_training","unlisted":false},{"type":"link","label":"Bus Factor","href":"/docs/glossary/bus_factor","docId":"glossary/bus_factor","unlisted":false},{"type":"link","label":"Coding Dojo","href":"/docs/glossary/coding_dojo","docId":"glossary/coding_dojo","unlisted":false},{"type":"link","label":"Commit","href":"/docs/glossary/commit","docId":"glossary/commit","unlisted":false},{"type":"link","label":"Creative Commons Attribution-ShareAlike 3.0 Unported License","href":"/docs/glossary/creative_commons_license","docId":"glossary/creative_commons_license","unlisted":false},{"type":"link","label":"Driver/Navigator","href":"/docs/glossary/driver_navigator","docId":"glossary/driver_navigator","unlisted":false},{"type":"link","label":"Dynamic Duo Programming","href":"/docs/glossary/dynamic_duo_programming","docId":"glossary/dynamic_duo_programming","unlisted":false},{"type":"link","label":"Extraversion/Introversion","href":"/docs/glossary/extraversion_introversion","docId":"glossary/extraversion_introversion","unlisted":false},{"type":"link","label":"Fizz Buzz (exercise)","href":"/docs/glossary/fizzbuzz","docId":"glossary/fizzbuzz","unlisted":false},{"type":"link","label":"Follow-the-Sun Development","href":"/docs/glossary/follow_the_sun_development","docId":"glossary/follow_the_sun_development","unlisted":false},{"type":"link","label":"Hinge Pairing","href":"/docs/glossary/hinge_pairing","docId":"glossary/hinge_pairing","unlisted":false},{"type":"link","label":"Kata","href":"/docs/glossary/kata","docId":"glossary/kata","unlisted":false},{"type":"link","label":"Knowledge Silo","href":"/docs/glossary/knowledge_silo","docId":"glossary/knowledge_silo","unlisted":false},{"type":"link","label":"Law of Two Feet","href":"/docs/glossary/law_of_two_feet","docId":"glossary/law_of_two_feet","unlisted":false},{"type":"link","label":"Pair Courage","href":"/docs/glossary/pair_courage","docId":"glossary/pair_courage","unlisted":false},{"type":"link","label":"Pair Debugging","href":"/docs/glossary/pair_debugging","docId":"glossary/pair_debugging","unlisted":false},{"type":"link","label":"Pair Learning","href":"/docs/glossary/pair_learning","docId":"glossary/pair_learning","unlisted":false},{"type":"link","label":"Pair Negotiation","href":"/docs/glossary/pair_negotiation","docId":"glossary/pair_negotiation","unlisted":false},{"type":"link","label":"Pair Pressure","href":"/docs/glossary/pair_pressure","docId":"glossary/pair_pressure","unlisted":false},{"type":"link","label":"Pair Programming","href":"/docs/glossary/pair_programming","docId":"glossary/pair_programming","unlisted":false},{"type":"link","label":"Pair Reviews","href":"/docs/glossary/pair_reviews","docId":"glossary/pair_reviews","unlisted":false},{"type":"link","label":"Pair Trust","href":"/docs/glossary/pair_trust","docId":"glossary/pair_trust","unlisted":false},{"type":"link","label":"Pairing Pod","href":"/docs/glossary/pairing_pod","docId":"glossary/pairing_pod","unlisted":false},{"type":"link","label":"Pairing-Stair","href":"/docs/glossary/pairing_stair","docId":"glossary/pairing_stair","unlisted":false},{"type":"link","label":"Pairing-Workspaces","href":"/docs/glossary/pairing_workspaces","docId":"glossary/pairing_workspaces","unlisted":false},{"type":"link","label":"Ping Pong Pairing","href":"/docs/glossary/ping_pong_pairing","docId":"glossary/ping_pong_pairing","unlisted":false},{"type":"link","label":"Promiscuous Pairing","href":"/docs/glossary/promiscuous_pairing","docId":"glossary/promiscuous_pairing","unlisted":false},{"type":"link","label":"Regular Commits","href":"/docs/glossary/regular_commits","docId":"glossary/regular_commits","unlisted":false},{"type":"link","label":"Seven Habits of Effective Pair Programmers","href":"/docs/glossary/seven_habits_effective_pair_programmers","docId":"glossary/seven_habits_effective_pair_programmers","unlisted":false},{"type":"link","label":"Shu-Ha-Ri","href":"/docs/glossary/shu_ha_ri","docId":"glossary/shu_ha_ri","unlisted":false},{"type":"link","label":"Silent Pairing","href":"/docs/glossary/silent_pairing","docId":"glossary/silent_pairing","unlisted":false},{"type":"link","label":"Strong-Style Pairing","href":"/docs/glossary/strong_style_pairing","docId":"glossary/strong_style_pairing","unlisted":false},{"type":"link","label":"Styleguide","href":"/docs/glossary/styleguide","docId":"glossary/styleguide","unlisted":false},{"type":"link","label":"Switch Times","href":"/docs/glossary/switch_times","docId":"glossary/switch_times","unlisted":false},{"type":"link","label":"Synergies in Pair Programming","href":"/docs/glossary/synergies_in_pair_programming","docId":"glossary/synergies_in_pair_programming","unlisted":false},{"type":"link","label":"Test-First Pairing","href":"/docs/glossary/test_first_pairing","docId":"glossary/test_first_pairing","unlisted":false},{"type":"link","label":"YAGNI (You Aren\'t Gonna Need It)","href":"/docs/glossary/yagni","docId":"glossary/yagni","unlisted":false}],"href":"/docs/category/glossary"}]},"docs":{"activities/grow_and_glow_game":{"id":"activities/grow_and_glow_game","title":"Grow and Glow Game: Facilitator Instructions","description":"Purpose","sidebar":"tutorialSidebar"},"activities/myth_or_fact_game":{"id":"activities/myth_or_fact_game","title":"Myth or Fact Game","description":"A group activity where statements about pair programming are evaluated as myths or facts. This game reinforces understanding of concepts through debate and clarification.","sidebar":"tutorialSidebar"},"activities/pair_draw":{"id":"activities/pair_draw","title":"Pair Draw","description":"An icebreaker activity where pairs draw a picture together without talking, promoting non-verbal communication and collaboration. This exercise encourages creativity and shared understanding.","sidebar":"tutorialSidebar"},"agenda":{"id":"agenda","title":"Agenda","description":"Two-Day Workshop Format","sidebar":"tutorialSidebar"},"glossary/baby_steps":{"id":"glossary/baby_steps","title":"Baby Steps","description":"A strategy where small, incremental changes are made to code to maintain control and ensure steady progress. This helps prevent overwhelm and allows for frequent feedback.","sidebar":"tutorialSidebar"},"glossary/back_of_room_training":{"id":"glossary/back_of_room_training","title":"Back of the Room Training","description":"A learner-centered approach where the instructor acts as a facilitator rather than a lecturer, encouraging participants to engage and learn through activities. This method fosters better retention and practical understanding.","sidebar":"tutorialSidebar"},"glossary/bus_factor":{"id":"glossary/bus_factor","title":"Bus Factor","description":"The minimum number of team members who would need to be incapacitated (e.g., \\"hit by a bus\\") for a project to be severely compromised or unable to continue. A low bus factor indicates concentrated knowledge and high project risk, while a higher bus factor suggests better knowledge distribution and team resilience.","sidebar":"tutorialSidebar"},"glossary/coding_dojo":{"id":"glossary/coding_dojo","title":"Coding Dojo","description":"A collaborative programming session where participants practice solving coding challenges in a friendly environment, often focusing on a \\"kata.\\" It helps improve skills in a low-pressure setting.","sidebar":"tutorialSidebar"},"glossary/commit":{"id":"glossary/commit","title":"Commit","description":"A command in version control to save changes to a project\'s repository, marking a milestone. Commits make code changes traceable and collaborative.","sidebar":"tutorialSidebar"},"glossary/creative_commons_license":{"id":"glossary/creative_commons_license","title":"Creative Commons Attribution-ShareAlike 3.0 Unported License","description":"A legal framework allowing creators to share work freely, as long as credit is given and derivative works are shared alike. This license is often used in educational and creative works to facilitate open knowledge sharing.","sidebar":"tutorialSidebar"},"glossary/driver_navigator":{"id":"glossary/driver_navigator","title":"Driver/Navigator","description":"Roles in pair programming; the driver writes the code, while the navigator reviews the code, offers feedback, and guides the approach. Regular switching of roles enhances understanding and engagement in the task.","sidebar":"tutorialSidebar"},"glossary/dynamic_duo_programming":{"id":"glossary/dynamic_duo_programming","title":"Dynamic Duo Programming","description":"The original term coined by Larry Constantine in the early 1990s to describe what later became known as pair programming. It emphasized the synergistic relationship between two programmers working together at a single workstation, comparing their collaborative potential to famous partnerships like Batman and Robin.","sidebar":"tutorialSidebar"},"glossary/extraversion_introversion":{"id":"glossary/extraversion_introversion","title":"Extraversion/Introversion","description":"Two personality traits describing one\'s preference for social interaction: extraverts seek stimulation from outside, while introverts draw energy from solitude or smaller social settings. This distinction influences how individuals approach team work and pairing.","sidebar":"tutorialSidebar"},"glossary/fizzbuzz":{"id":"glossary/fizzbuzz","title":"Fizz Buzz (exercise)","description":"A common programming task where developers write a program that prints \\"Fizz\\" for multiples of 3, \\"Buzz\\" for multiples of 5, and \\"FizzBuzz\\" for multiples of both. It tests basic programming skills and logic.","sidebar":"tutorialSidebar"},"glossary/follow_the_sun_development":{"id":"glossary/follow_the_sun_development","title":"Follow-the-Sun Development","description":"A software development approach where work is handed off between teams in different time zones, enabling continuous progress around the clock. As one team ends their workday, they transfer in-progress work to another team just beginning theirs, theoretically allowing development to continue 24 hours a day.","sidebar":"tutorialSidebar"},"glossary/hinge_pairing":{"id":"glossary/hinge_pairing","title":"Hinge Pairing","description":"A pairing technique where pairs switch frequently but continue working on the same project or task, allowing knowledge to circulate across the team.","sidebar":"tutorialSidebar"},"glossary/kata":{"id":"glossary/kata","title":"Kata","description":"A programming exercise, often repetitive, designed to improve skill and problem-solving techniques. Commonly used in coding dojos, it builds muscle memory for solving coding problems.","sidebar":"tutorialSidebar"},"glossary/knowledge_silo":{"id":"glossary/knowledge_silo","title":"Knowledge Silo","description":"A condition where critical information, expertise, or skills related to a system or process are confined to a single individual or small group within an organization. Knowledge silos create significant business risk and impede collaboration, innovation, and organizational agility.","sidebar":"tutorialSidebar"},"glossary/law_of_two_feet":{"id":"glossary/law_of_two_feet","title":"Law of Two Feet","description":"A rule in unconference-style workshops allowing participants to move freely to discussions or activities that interest them most. It empowers participants to take responsibility for their learning.","sidebar":"tutorialSidebar"},"glossary/pair_courage":{"id":"glossary/pair_courage","title":"Pair Courage","description":"The mutual encouragement pairs provide to take on challenging tasks they might avoid alone. Pair courage often leads to bolder decisions and more innovative problem-solving.","sidebar":"tutorialSidebar"},"glossary/pair_debugging":{"id":"glossary/pair_debugging","title":"Pair Debugging","description":"Working together to identify and solve coding errors, which benefits from both partners\' perspectives and reduces the time needed to find and fix bugs.","sidebar":"tutorialSidebar"},"glossary/pair_learning":{"id":"glossary/pair_learning","title":"Pair Learning","description":"Knowledge transfer that happens organically in pair programming, where partners share skills, techniques, and insights while working on tasks.","sidebar":"tutorialSidebar"},"glossary/pair_negotiation":{"id":"glossary/pair_negotiation","title":"Pair Negotiation","description":"The process of communication and compromise in pair programming to reach mutual agreement on coding decisions. Effective negotiation ensures both partners contribute and feel valued.","sidebar":"tutorialSidebar"},"glossary/pair_pressure":{"id":"glossary/pair_pressure","title":"Pair Pressure","description":"A form of constructive pressure in pair programming that encourages each partner to perform their best due to the presence of a peer. It can help maintain focus and improve quality.","sidebar":"tutorialSidebar"},"glossary/pair_programming":{"id":"glossary/pair_programming","title":"Pair Programming","description":"A software development technique where two programmers work at one computer, with one coding (\\"driver\\") and the other reviewing and guiding (\\"navigator\\"). This approach improves code quality, knowledge sharing, and collaboration.","sidebar":"tutorialSidebar"},"glossary/pair_reviews":{"id":"glossary/pair_reviews","title":"Pair Reviews","description":"A method of code review conducted in real-time by a pair of developers. Pair reviews offer immediate feedback, enhance knowledge sharing, and improve code quality.","sidebar":"tutorialSidebar"},"glossary/pair_trust":{"id":"glossary/pair_trust","title":"Pair Trust","description":"The foundation of a successful pairing relationship, where both partners feel comfortable and open, enhancing collaboration and shared ownership of tasks.","sidebar":"tutorialSidebar"},"glossary/pairing_pod":{"id":"glossary/pairing_pod","title":"Pairing Pod","description":"A dedicated workstation specifically designed for pair programming, optimized for two developers to work comfortably and effectively together. Pairing pods typically feature dual monitors, dual input devices (keyboards and mice), ample desk space, and appropriate seating arrangements to facilitate collaboration.","sidebar":"tutorialSidebar"},"glossary/pairing_stair":{"id":"glossary/pairing_stair","title":"Pairing-Stair","description":"A visualization tool to track pairs and their activities over time. It ensures structured rotation and keeps everyone engaged.","sidebar":"tutorialSidebar"},"glossary/pairing_workspaces":{"id":"glossary/pairing_workspaces","title":"Pairing-Workspaces","description":"Dedicated areas where teams can work on pair programming with ergonomic setups, dual screens, and enough space for smooth collaboration. Proper setups reduce distractions and boost productivity.","sidebar":"tutorialSidebar"},"glossary/ping_pong_pairing":{"id":"glossary/ping_pong_pairing","title":"Ping Pong Pairing","description":"A structured pair programming technique that combines Test-Driven Development (TDD) with role switching. One developer writes a failing test (ping), then the other developer makes the test pass by implementing the code (pong). Roles alternate throughout the development session, creating a rhythmic workflow.","sidebar":"tutorialSidebar"},"glossary/promiscuous_pairing":{"id":"glossary/promiscuous_pairing","title":"Promiscuous Pairing","description":"A form of pair programming where team members frequently change partners to increase exposure to diverse perspectives and skills. This method helps distribute knowledge across the team more evenly.","sidebar":"tutorialSidebar"},"glossary/regular_commits":{"id":"glossary/regular_commits","title":"Regular Commits","description":"The practice of committing code changes frequently to ensure incremental progress and reduce the risk of lost work. Regular commits make it easier to track changes and troubleshoot issues.","sidebar":"tutorialSidebar"},"glossary/seven_habits_effective_pair_programmers":{"id":"glossary/seven_habits_effective_pair_programmers","title":"Seven Habits of Effective Pair Programmers","description":"Seven practices that enhance pair programming success, including good communication, humility, and balanced assertiveness. Following these habits helps create an effective and productive pairing experience.","sidebar":"tutorialSidebar"},"glossary/shu_ha_ri":{"id":"glossary/shu_ha_ri","title":"Shu-Ha-Ri","description":"Shu-Ha-Ri describes the stages of mastery in learning, starting with learning the basics (Shu), then innovating (Ha), and finally transcending rules to develop personal style (Ri). This concept is used in martial arts, programming, and skill development.","sidebar":"tutorialSidebar"},"glossary/silent_pairing":{"id":"glossary/silent_pairing","title":"Silent Pairing","description":"A pairing exercise where participants are not allowed to speak, encouraging reliance on non-verbal cues and attentive observation. This activity enhances communication skills and mutual understanding.","sidebar":"tutorialSidebar"},"glossary/strong_style_pairing":{"id":"glossary/strong_style_pairing","title":"Strong-Style Pairing","description":"A pair programming approach where the navigator has the ideas and the driver implements them, following the principle: \\"For an idea to go from your head into the computer, it MUST go through someone else\'s hands.\\" This style emphasizes knowledge transfer and is particularly effective when there\'s a significant skill gap between partners.","sidebar":"tutorialSidebar"},"glossary/styleguide":{"id":"glossary/styleguide","title":"Styleguide","description":"A set of coding standards that defines how code should be written and organized. Adhering to a style guide ensures consistency and readability within a team or project.","sidebar":"tutorialSidebar"},"glossary/switch_times":{"id":"glossary/switch_times","title":"Switch Times","description":"Scheduled intervals during which the driver and navigator roles switch in pair programming. Regular switching ensures balanced participation and shared understanding.","sidebar":"tutorialSidebar"},"glossary/synergies_in_pair_programming":{"id":"glossary/synergies_in_pair_programming","title":"Synergies in Pair Programming","description":"Synergies are collaborative effects that emerge during pair programming, such as trust, learning, and courage. They help pairs achieve more together than they might individually.","sidebar":"tutorialSidebar"},"glossary/test_first_pairing":{"id":"glossary/test_first_pairing","title":"Test-First Pairing","description":"A practice where one partner writes a test that intentionally fails, and the other writes code to pass it. This is a form of Test-Driven Development (TDD), encouraging rigorous, quality-focused development.","sidebar":"tutorialSidebar"},"glossary/yagni":{"id":"glossary/yagni","title":"YAGNI (You Aren\'t Gonna Need It)","description":"A principle in agile software development that encourages avoiding unnecessary features. YAGNI helps teams focus on essential tasks to improve productivity.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"This workshop began as an exercise and challenge in turning any engaging topic into an interactive session. In 2013, I reached out on Twitter and quickly found volunteers to test the format\u2014heavily inspired by Code Retreats and the then-emerging ensemble-programming movement. Generous feedback helped me refine the content, and improvements were incorporated over the years.","sidebar":"tutorialSidebar"}}}}')}}]);